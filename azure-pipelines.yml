trigger:
- develop

resources:
- repo: self

pool:
  name: 'Default'
  demands:
  - agent.name -equals agentP

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build and Push Docker Image
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: Build and push Docker image
      inputs:
        containerRegistry: 'agronovatestcontainer.azurecr.io'
        command: 'build'
        Dockerfile: '**/agronova-api/Dockerfile'
        arguments: '-t agronovabackend'
    - task: Docker@2
      displayName: Tag an image
      inputs:
        command: 'tag'
        containerRegistry: 'agronovatestcontainer.azurecr.io'
        arguments: 'agronovabackend:latest agronovatestcontainer.azurecr.io/agronovabackend:latest'
        addPipelineData: false
        addBaseImageData: false
    - task: Docker@2
      displayName: Push an image
      inputs:
        command: 'push'
        containerRegistry: 'agronovatestcontainer.azurecr.io'
        repository: agronovabackend'
        tags: 'latest'
- stage: Deploy
  displayName: Deploy to Azure Web App
  dependsOn: Build
  jobs:
  - job: Deploy
    displayName: Deploy to Azure Web App
    steps:
    - task: AzureWebAppContainer@1
      inputs:
        azureSubscription: 'Azure for Students(7286d3c8-dcc9-4c06-8b82-b1ae61ed12f0)'
        appName: 'agronova-api'
        deployToSlotOrASE: true
        resourceGroupName: 'ISC09A'
        slotName: 'production'
        containers: 'agronovatestcontainer.azurecr.io/agronovabackend:latest'
        containerCommand: 'docker run --workdir=/app -p 443:3000'
        acrUsername: 'agronovatestcontainer'
        acrPassword: 'tnxfvrLZ640rGppiq5M5aWl1hhRL4pemlcD2/+byR4+ACRCJw5dF'